// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Proyecto_StoreWare.Migrations.SQLite
{
    [DbContext(typeof(StoreWareSQLite))]
    [Migration("20250718173611_InitialCreate_SQLite")]
    partial class InitialCreate_SQLite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Proyecto_StoreWare.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdminId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AdministradorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PagoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PagoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contraseña")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Producto", b =>
                {
                    b.HasOne("Proyecto_StoreWare.Models.Administrador", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("Proyecto_StoreWare.Models.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Admin");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Proveedor", b =>
                {
                    b.HasOne("Proyecto_StoreWare.Models.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Transaccion", b =>
                {
                    b.HasOne("Proyecto_StoreWare.Models.Pago", "Pago")
                        .WithMany("Transacciones")
                        .HasForeignKey("PagoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Proyecto_StoreWare.Models.Producto", "Producto")
                        .WithMany("Transaccion")
                        .HasForeignKey("ProductoId");

                    b.HasOne("Proyecto_StoreWare.Models.Usuario", "Usuario")
                        .WithMany("Transacciones")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Pago");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Pago", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Producto", b =>
                {
                    b.Navigation("Transaccion");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Proyecto_StoreWare.Models.Usuario", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
